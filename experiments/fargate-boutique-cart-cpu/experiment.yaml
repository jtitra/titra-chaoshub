apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  name: fargate-boutique-cart-cpu
  namespace: hce
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: hce
  entrypoint: fargate-boutique-cart
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsGroup: 0
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: fargate-boutique-cart
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-faults
        template: install-chaos-faults
    - - arguments: {}
        name: ecs-fargate-cpu-hog-x3q
        template: ecs-fargate-cpu-hog-x3q
    - - arguments: {}
        name: cleanup-chaos-resources
        template: cleanup-chaos-resources
  - container:
      args:
      - kubectl apply -f /tmp/ -n {{workflow.parameters.adminModeNamespace}} && sleep
        30
      command:
      - sh
      - -c
      image: docker.io/harness/chaos-k8s:1.37.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: ecs-fargate-cpu-hog-x3q
        path: /tmp/ecs-fargate-cpu-hog-x3q.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Inject cpu chaos on ECS task container for specified chaos duration.
            kind: ChaosExperiment
            metadata:
              name: ecs-fargate-cpu-hog
              labels:
                name: ecs-fargate-cpu-hog
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: ci
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - deployments
                      - statefulsets
                      - replicasets
                      - daemonsets
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - apps.openshift.io
                    resources:
                      - deploymentconfigs
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - ""
                    resources:
                      - replicationcontrollers
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - argoproj.io
                    resources:
                      - rollouts
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                image: docker.io/harness/chaos-go-runner:1.37.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name ecs-fargate-cpu-hog
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "30"
                  - name: CHAOS_INTERVAL
                    value: "30"
                  - name: RAMP_TIME
                    value: ""
                  - name: CLUSTER_NAME
                    value: ""
                  - name: SERVICE_NAME
                    value: ""
                  - name: CPU_CORE
                    value: "2"
                  - name: CONTAINER_IMAGE
                    value: chaosnative/chaos-go-runner:1.37.0
                  - name: REGION
                    value: ""
                  - name: TASK_REPLICA_AFFECTED_PERC
                    value: "100"
                  - name: AWS_SHARED_CREDENTIALS_FILE
                    value: /tmp/cloud_config.yml
                labels:
                  name: ecs-fargate-cpu-hog
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: ci
                  app.kubernetes.io/enableAWSAccessViaSecrets: enable
                securityContext:
                  podSecurityContext:
                    runAsUser: 2000
                    runAsGroup: 0
                secrets:
                  - name: cloud-secret
                    mountPath: /tmp/
    metadata: {}
    name: install-chaos-faults
    outputs: {}
  - container:
      args:
      - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: docker.io/harness/chaos-k8s:1.37.0
      name: ""
      resources: {}
    inputs: {}
    metadata: {}
    name: cleanup-chaos-resources
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-ecs-fargate-cpu-hog-x3q.yaml
      - -saveName=/tmp/engine-name
      command:
      - ./var/run/checker
      image: docker.io/harness/litmus-checker:1.37.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: ecs-fargate-cpu-hog-x3q
        path: /tmp/chaosengine-ecs-fargate-cpu-hog-x3q.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              labels:
                workflow_run_id: "{{ workflow.uid }}"
                workflow_name: fargate-boutique-cart-cpu
              annotations:
                probeRef: '[{"name":"fargate-boutique-availability","mode":"Continuous"}]'
              generateName: ecs-fargate-cpu-hog-x3q
            spec:
              engineState: active
              terminationGracePeriodSeconds: 30
              chaosServiceAccount: litmus-admin
              experiments:
                - name: ecs-fargate-cpu-hog
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "30"
                        - name: CHAOS_INTERVAL
                          value: "30"
                        - name: RAMP_TIME
                          value: ""
                        - name: CLUSTER_NAME
                          value: titra-microservices-demo-cluster
                        - name: SERVICE_NAME
                          value: cartservice
                        - name: CPU_CORE
                          value: "2"
                        - name: CONTAINER_IMAGE
                          value: chaosnative/chaos-go-runner:1.37.0
                        - name: REGION
                          value: us-east-1
                        - name: TASK_REPLICA_AFFECTED_PERC
                          value: "100"
                        - name: AWS_SHARED_CREDENTIALS_FILE
                          value: /tmp/cloud_config.yml
                      statusCheckTimeouts:
                        delay: 2
                        timeout: 360
                    probe:
                      - name: healthcheck
                        type: cmdProbe
                        mode: Edge
                        runProperties:
                          probeTimeout: 5s
                          retry: 0
                          interval: 1s
                          stopOnFailure: false
                        cmdProbe/inputs:
                          command: ./healthcheck -name aws-ecs-task-check
                          source:
                            image: docker.io/harness/chaos-go-runner:1.37.0
                            inheritInputs: true
                            volumeMount:
                              - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
                                name: aws-iam-token
                                readOnly: true
                            volumes:
                              - name: aws-iam-token
                                projected:
                                  defaultMode: 420
                                  sources:
                                    - serviceAccountToken:
                                        audience: sts.amazonaws.com
                                        expirationSeconds: 86400
                                        path: token
                          comparator:
                            type: string
                            criteria: contains
                            value: "[P000]"
              jobCleanUpPolicy: delete
    metadata:
      labels:
        weight: "10"
    name: ecs-fargate-cpu-hog-x3q
    outputs: {}
status:
  finishedAt: null
  startedAt: null
